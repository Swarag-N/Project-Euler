'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

# Initializing the Fibonacci Series  
l = [1,1]
#Having an Index
i = 1
while(l[i]<4000000):
    #The index always points to the largest value of the array.
    #So, if the maximum value goes beyond 4 million the loop breaks
    l.append(l[i]+l[i-1])
    i+=1

'''	
>>> l
[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887]
'''


# But there is a catch while exiting the loop the last 
# value would be greater than 4 million so we need to take out 

'''
>>> l
[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887]
>>> l.pop()
5702887
>>> l
[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578]
>>> 
'''

l.pop()

#Intializing the sum process with a Variable to zer0
var1 = 0
for var2 in l:
    #Considering each value in array and to see if it is even
    #Incrementing Var1 with that value
    if var2%2==0:
        var1+=var2

print(var1)
